cmake_minimum_required(VERSION 3.9)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

file(GLOB LIB_SOURCES *.cpp graphics/*.cpp)
file(GLOB LIB_HEADERS *.h graphics/*.h version/*.h)
file(GLOB LIB_UIS *.ui)

set(RIPES_LIB ripes_lib)
add_library(${RIPES_LIB} ${LIB_SOURCES} ${LIB_HEADERS} ${LIB_UIS} ${CMAKE_CURRENT_BINARY_DIR}/version/version.cpp)
target_include_directories (${RIPES_LIB} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
target_compile_features(${RIPES_LIB} PRIVATE cxx_std_17)

# Link external libraries
target_link_libraries(${RIPES_LIB} fancytabbar_lib)
target_link_libraries(${RIPES_LIB} ${VSRTL_GRAPHICS_LIB})

add_subdirectory(processors)

# -----------------------------------------------------------------------------
# Version control file
# A file version.cpp is generated, containing information regarding the current
# .git revision. This information is embedded into the binary for future
# reference, ie. for issue reporting.
#
# Modified version of https://www.mattkeeter.com/blog/2018-01-06-versioning/
add_custom_target(
    version_file ALL
    # Depend on the dummy file (which is not generated by the versioning script)
    # to ensure that the custom command is executed each time the project is built.
    DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/version/_version.cpp
    )

add_dependencies(${RIPES_LIB} version_file)

add_custom_command(
    OUTPUT
         # Actual file generated by the versioning script
        ${CMAKE_CURRENT_BINARY_DIR}/version/version.cpp
        # Dummy file not generated by the sript, but may be used as a dependency
        ${CMAKE_CURRENT_BINARY_DIR}/version/_version.cpp
    COMMAND
        ${CMAKE_COMMAND}
            -DRIPES_SRC_DIR=${CMAKE_SOURCE_DIR}
            -P ${CMAKE_CURRENT_SOURCE_DIR}/version/version.cmake)
# Do not run AUTOMOC and AUTOUIC on the generated file (CMake warning)
set_property(SOURCE ${CMAKE_CURRENT_BINARY_DIR}/version/version.cpp PROPERTY SKIP_AUTOGEN ON)
# -----------------------------------------------------------------------------
